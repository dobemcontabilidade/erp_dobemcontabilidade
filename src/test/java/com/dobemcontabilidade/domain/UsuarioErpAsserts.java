package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UsuarioErpAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioErpAllPropertiesEquals(UsuarioErp expected, UsuarioErp actual) {
        assertUsuarioErpAutoGeneratedPropertiesEquals(expected, actual);
        assertUsuarioErpAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioErpAllUpdatablePropertiesEquals(UsuarioErp expected, UsuarioErp actual) {
        assertUsuarioErpUpdatableFieldsEquals(expected, actual);
        assertUsuarioErpUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioErpAutoGeneratedPropertiesEquals(UsuarioErp expected, UsuarioErp actual) {
        assertThat(expected)
            .as("Verify UsuarioErp auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioErpUpdatableFieldsEquals(UsuarioErp expected, UsuarioErp actual) {
        assertThat(expected)
            .as("Verify UsuarioErp relevant properties")
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getSenha()).as("check senha").isEqualTo(actual.getSenha()))
            .satisfies(e -> assertThat(e.getDataHoraAtivacao()).as("check dataHoraAtivacao").isEqualTo(actual.getDataHoraAtivacao()))
            .satisfies(e -> assertThat(e.getDataLimiteAcesso()).as("check dataLimiteAcesso").isEqualTo(actual.getDataLimiteAcesso()))
            .satisfies(e -> assertThat(e.getSituacao()).as("check situacao").isEqualTo(actual.getSituacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioErpUpdatableRelationshipsEquals(UsuarioErp expected, UsuarioErp actual) {
        assertThat(expected)
            .as("Verify UsuarioErp relationships")
            .satisfies(e -> assertThat(e.getAdministrador()).as("check administrador").isEqualTo(actual.getAdministrador()));
    }
}
