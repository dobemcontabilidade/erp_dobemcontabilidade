package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EscolaridadePessoaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEscolaridadePessoaAllPropertiesEquals(EscolaridadePessoa expected, EscolaridadePessoa actual) {
        assertEscolaridadePessoaAutoGeneratedPropertiesEquals(expected, actual);
        assertEscolaridadePessoaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEscolaridadePessoaAllUpdatablePropertiesEquals(EscolaridadePessoa expected, EscolaridadePessoa actual) {
        assertEscolaridadePessoaUpdatableFieldsEquals(expected, actual);
        assertEscolaridadePessoaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEscolaridadePessoaAutoGeneratedPropertiesEquals(EscolaridadePessoa expected, EscolaridadePessoa actual) {
        assertThat(expected)
            .as("Verify EscolaridadePessoa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEscolaridadePessoaUpdatableFieldsEquals(EscolaridadePessoa expected, EscolaridadePessoa actual) {
        assertThat(expected)
            .as("Verify EscolaridadePessoa relevant properties")
            .satisfies(e -> assertThat(e.getNomeInstituicao()).as("check nomeInstituicao").isEqualTo(actual.getNomeInstituicao()))
            .satisfies(e -> assertThat(e.getAnoConclusao()).as("check anoConclusao").isEqualTo(actual.getAnoConclusao()))
            .satisfies(
                e ->
                    assertThat(e.getUrlComprovanteEscolaridade())
                        .as("check urlComprovanteEscolaridade")
                        .isEqualTo(actual.getUrlComprovanteEscolaridade())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEscolaridadePessoaUpdatableRelationshipsEquals(EscolaridadePessoa expected, EscolaridadePessoa actual) {
        assertThat(expected)
            .as("Verify EscolaridadePessoa relationships")
            .satisfies(e -> assertThat(e.getPessoa()).as("check pessoa").isEqualTo(actual.getPessoa()))
            .satisfies(e -> assertThat(e.getEscolaridade()).as("check escolaridade").isEqualTo(actual.getEscolaridade()));
    }
}
