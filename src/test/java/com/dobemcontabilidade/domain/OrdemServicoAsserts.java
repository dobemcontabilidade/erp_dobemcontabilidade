package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrdemServicoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdemServicoAllPropertiesEquals(OrdemServico expected, OrdemServico actual) {
        assertOrdemServicoAutoGeneratedPropertiesEquals(expected, actual);
        assertOrdemServicoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdemServicoAllUpdatablePropertiesEquals(OrdemServico expected, OrdemServico actual) {
        assertOrdemServicoUpdatableFieldsEquals(expected, actual);
        assertOrdemServicoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdemServicoAutoGeneratedPropertiesEquals(OrdemServico expected, OrdemServico actual) {
        assertThat(expected)
            .as("Verify OrdemServico auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdemServicoUpdatableFieldsEquals(OrdemServico expected, OrdemServico actual) {
        assertThat(expected)
            .as("Verify OrdemServico relevant properties")
            .satisfies(e -> assertThat(e.getValor()).as("check valor").isEqualTo(actual.getValor()))
            .satisfies(e -> assertThat(e.getPrazo()).as("check prazo").isEqualTo(actual.getPrazo()))
            .satisfies(e -> assertThat(e.getDataCriacao()).as("check dataCriacao").isEqualTo(actual.getDataCriacao()))
            .satisfies(
                e -> assertThat(e.getDataHoraCancelamento()).as("check dataHoraCancelamento").isEqualTo(actual.getDataHoraCancelamento())
            )
            .satisfies(e -> assertThat(e.getStatusDaOS()).as("check statusDaOS").isEqualTo(actual.getStatusDaOS()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdemServicoUpdatableRelationshipsEquals(OrdemServico expected, OrdemServico actual) {
        assertThat(expected)
            .as("Verify OrdemServico relationships")
            .satisfies(e -> assertThat(e.getEmpresa()).as("check empresa").isEqualTo(actual.getEmpresa()))
            .satisfies(e -> assertThat(e.getContador()).as("check contador").isEqualTo(actual.getContador()))
            .satisfies(e -> assertThat(e.getFluxoModelo()).as("check fluxoModelo").isEqualTo(actual.getFluxoModelo()));
    }
}
