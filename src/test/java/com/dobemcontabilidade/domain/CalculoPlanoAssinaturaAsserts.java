package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CalculoPlanoAssinaturaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCalculoPlanoAssinaturaAllPropertiesEquals(CalculoPlanoAssinatura expected, CalculoPlanoAssinatura actual) {
        assertCalculoPlanoAssinaturaAutoGeneratedPropertiesEquals(expected, actual);
        assertCalculoPlanoAssinaturaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCalculoPlanoAssinaturaAllUpdatablePropertiesEquals(
        CalculoPlanoAssinatura expected,
        CalculoPlanoAssinatura actual
    ) {
        assertCalculoPlanoAssinaturaUpdatableFieldsEquals(expected, actual);
        assertCalculoPlanoAssinaturaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCalculoPlanoAssinaturaAutoGeneratedPropertiesEquals(
        CalculoPlanoAssinatura expected,
        CalculoPlanoAssinatura actual
    ) {
        assertThat(expected)
            .as("Verify CalculoPlanoAssinatura auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCalculoPlanoAssinaturaUpdatableFieldsEquals(CalculoPlanoAssinatura expected, CalculoPlanoAssinatura actual) {
        assertThat(expected)
            .as("Verify CalculoPlanoAssinatura relevant properties")
            .satisfies(e -> assertThat(e.getCodigoAtendimento()).as("check codigoAtendimento").isEqualTo(actual.getCodigoAtendimento()))
            .satisfies(e -> assertThat(e.getValorEnquadramento()).as("check valorEnquadramento").isEqualTo(actual.getValorEnquadramento()))
            .satisfies(e -> assertThat(e.getValorTributacao()).as("check valorTributacao").isEqualTo(actual.getValorTributacao()))
            .satisfies(e -> assertThat(e.getValorRamo()).as("check valorRamo").isEqualTo(actual.getValorRamo()))
            .satisfies(e -> assertThat(e.getValorFuncionarios()).as("check valorFuncionarios").isEqualTo(actual.getValorFuncionarios()))
            .satisfies(e -> assertThat(e.getValorSocios()).as("check valorSocios").isEqualTo(actual.getValorSocios()))
            .satisfies(e -> assertThat(e.getValorFaturamento()).as("check valorFaturamento").isEqualTo(actual.getValorFaturamento()))
            .satisfies(e -> assertThat(e.getValorPlanoContabil()).as("check valorPlanoContabil").isEqualTo(actual.getValorPlanoContabil()))
            .satisfies(
                e ->
                    assertThat(e.getValorPlanoContabilComDesconto())
                        .as("check valorPlanoContabilComDesconto")
                        .isEqualTo(actual.getValorPlanoContabilComDesconto())
            )
            .satisfies(e -> assertThat(e.getValorMensalidade()).as("check valorMensalidade").isEqualTo(actual.getValorMensalidade()))
            .satisfies(e -> assertThat(e.getValorPeriodo()).as("check valorPeriodo").isEqualTo(actual.getValorPeriodo()))
            .satisfies(e -> assertThat(e.getValorAno()).as("check valorAno").isEqualTo(actual.getValorAno()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCalculoPlanoAssinaturaUpdatableRelationshipsEquals(
        CalculoPlanoAssinatura expected,
        CalculoPlanoAssinatura actual
    ) {
        assertThat(expected)
            .as("Verify CalculoPlanoAssinatura relationships")
            .satisfies(e -> assertThat(e.getPeriodoPagamento()).as("check periodoPagamento").isEqualTo(actual.getPeriodoPagamento()))
            .satisfies(e -> assertThat(e.getPlanoContabil()).as("check planoContabil").isEqualTo(actual.getPlanoContabil()))
            .satisfies(e -> assertThat(e.getRamo()).as("check ramo").isEqualTo(actual.getRamo()))
            .satisfies(e -> assertThat(e.getTributacao()).as("check tributacao").isEqualTo(actual.getTributacao()))
            .satisfies(
                e -> assertThat(e.getDescontoPlanoContabil()).as("check descontoPlanoContabil").isEqualTo(actual.getDescontoPlanoContabil())
            )
            .satisfies(e -> assertThat(e.getAssinaturaEmpresa()).as("check assinaturaEmpresa").isEqualTo(actual.getAssinaturaEmpresa()));
    }
}
