package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DepartamentoFuncionarioAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoFuncionarioAllPropertiesEquals(DepartamentoFuncionario expected, DepartamentoFuncionario actual) {
        assertDepartamentoFuncionarioAutoGeneratedPropertiesEquals(expected, actual);
        assertDepartamentoFuncionarioAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoFuncionarioAllUpdatablePropertiesEquals(
        DepartamentoFuncionario expected,
        DepartamentoFuncionario actual
    ) {
        assertDepartamentoFuncionarioUpdatableFieldsEquals(expected, actual);
        assertDepartamentoFuncionarioUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoFuncionarioAutoGeneratedPropertiesEquals(
        DepartamentoFuncionario expected,
        DepartamentoFuncionario actual
    ) {
        assertThat(expected)
            .as("Verify DepartamentoFuncionario auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoFuncionarioUpdatableFieldsEquals(
        DepartamentoFuncionario expected,
        DepartamentoFuncionario actual
    ) {
        assertThat(expected)
            .as("Verify DepartamentoFuncionario relevant properties")
            .satisfies(e -> assertThat(e.getCargo()).as("check cargo").isEqualTo(actual.getCargo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoFuncionarioUpdatableRelationshipsEquals(
        DepartamentoFuncionario expected,
        DepartamentoFuncionario actual
    ) {
        assertThat(expected)
            .as("Verify DepartamentoFuncionario relationships")
            .satisfies(e -> assertThat(e.getFuncionario()).as("check funcionario").isEqualTo(actual.getFuncionario()))
            .satisfies(e -> assertThat(e.getDepartamento()).as("check departamento").isEqualTo(actual.getDepartamento()));
    }
}
