package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgendaContadorConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaContadorConfigAllPropertiesEquals(AgendaContadorConfig expected, AgendaContadorConfig actual) {
        assertAgendaContadorConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertAgendaContadorConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaContadorConfigAllUpdatablePropertiesEquals(AgendaContadorConfig expected, AgendaContadorConfig actual) {
        assertAgendaContadorConfigUpdatableFieldsEquals(expected, actual);
        assertAgendaContadorConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaContadorConfigAutoGeneratedPropertiesEquals(AgendaContadorConfig expected, AgendaContadorConfig actual) {
        assertThat(expected)
            .as("Verify AgendaContadorConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaContadorConfigUpdatableFieldsEquals(AgendaContadorConfig expected, AgendaContadorConfig actual) {
        assertThat(expected)
            .as("Verify AgendaContadorConfig relevant properties")
            .satisfies(e -> assertThat(e.getAtivo()).as("check ativo").isEqualTo(actual.getAtivo()))
            .satisfies(
                e ->
                    assertThat(e.getTipoVisualizacaoAgendaEnum())
                        .as("check tipoVisualizacaoAgendaEnum")
                        .isEqualTo(actual.getTipoVisualizacaoAgendaEnum())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaContadorConfigUpdatableRelationshipsEquals(AgendaContadorConfig expected, AgendaContadorConfig actual) {
        assertThat(expected)
            .as("Verify AgendaContadorConfig relationships")
            .satisfies(
                e ->
                    assertThat(e.getAgendaTarefaRecorrenteExecucao())
                        .as("check agendaTarefaRecorrenteExecucao")
                        .isEqualTo(actual.getAgendaTarefaRecorrenteExecucao())
            )
            .satisfies(
                e ->
                    assertThat(e.getAgendaTarefaOrdemServicoExecucao())
                        .as("check agendaTarefaOrdemServicoExecucao")
                        .isEqualTo(actual.getAgendaTarefaOrdemServicoExecucao())
            );
    }
}
