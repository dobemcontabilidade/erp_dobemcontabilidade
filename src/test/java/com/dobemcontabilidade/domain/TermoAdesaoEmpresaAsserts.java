package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TermoAdesaoEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoEmpresaAllPropertiesEquals(TermoAdesaoEmpresa expected, TermoAdesaoEmpresa actual) {
        assertTermoAdesaoEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertTermoAdesaoEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoEmpresaAllUpdatablePropertiesEquals(TermoAdesaoEmpresa expected, TermoAdesaoEmpresa actual) {
        assertTermoAdesaoEmpresaUpdatableFieldsEquals(expected, actual);
        assertTermoAdesaoEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoEmpresaAutoGeneratedPropertiesEquals(TermoAdesaoEmpresa expected, TermoAdesaoEmpresa actual) {
        assertThat(expected)
            .as("Verify TermoAdesaoEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoEmpresaUpdatableFieldsEquals(TermoAdesaoEmpresa expected, TermoAdesaoEmpresa actual) {
        assertThat(expected)
            .as("Verify TermoAdesaoEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getDataAdesao()).as("check dataAdesao").isEqualTo(actual.getDataAdesao()))
            .satisfies(e -> assertThat(e.getChecked()).as("check checked").isEqualTo(actual.getChecked()))
            .satisfies(e -> assertThat(e.getUrlDoc()).as("check urlDoc").isEqualTo(actual.getUrlDoc()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoEmpresaUpdatableRelationshipsEquals(TermoAdesaoEmpresa expected, TermoAdesaoEmpresa actual) {
        assertThat(expected)
            .as("Verify TermoAdesaoEmpresa relationships")
            .satisfies(e -> assertThat(e.getEmpresa()).as("check empresa").isEqualTo(actual.getEmpresa()))
            .satisfies(e -> assertThat(e.getPlanoContabil()).as("check planoContabil").isEqualTo(actual.getPlanoContabil()));
    }
}
