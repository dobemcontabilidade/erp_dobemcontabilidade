package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubTarefaOrdemServicoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubTarefaOrdemServicoAllPropertiesEquals(SubTarefaOrdemServico expected, SubTarefaOrdemServico actual) {
        assertSubTarefaOrdemServicoAutoGeneratedPropertiesEquals(expected, actual);
        assertSubTarefaOrdemServicoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubTarefaOrdemServicoAllUpdatablePropertiesEquals(
        SubTarefaOrdemServico expected,
        SubTarefaOrdemServico actual
    ) {
        assertSubTarefaOrdemServicoUpdatableFieldsEquals(expected, actual);
        assertSubTarefaOrdemServicoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubTarefaOrdemServicoAutoGeneratedPropertiesEquals(
        SubTarefaOrdemServico expected,
        SubTarefaOrdemServico actual
    ) {
        assertThat(expected)
            .as("Verify SubTarefaOrdemServico auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubTarefaOrdemServicoUpdatableFieldsEquals(SubTarefaOrdemServico expected, SubTarefaOrdemServico actual) {
        assertThat(expected)
            .as("Verify SubTarefaOrdemServico relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getOrdem()).as("check ordem").isEqualTo(actual.getOrdem()))
            .satisfies(e -> assertThat(e.getConcluida()).as("check concluida").isEqualTo(actual.getConcluida()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubTarefaOrdemServicoUpdatableRelationshipsEquals(
        SubTarefaOrdemServico expected,
        SubTarefaOrdemServico actual
    ) {
        assertThat(expected)
            .as("Verify SubTarefaOrdemServico relationships")
            .satisfies(
                e ->
                    assertThat(e.getTarefaOrdemServicoExecucao())
                        .as("check tarefaOrdemServicoExecucao")
                        .isEqualTo(actual.getTarefaOrdemServicoExecucao())
            );
    }
}
