package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AreaContabilAssinaturaEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilAssinaturaEmpresaAllPropertiesEquals(
        AreaContabilAssinaturaEmpresa expected,
        AreaContabilAssinaturaEmpresa actual
    ) {
        assertAreaContabilAssinaturaEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertAreaContabilAssinaturaEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilAssinaturaEmpresaAllUpdatablePropertiesEquals(
        AreaContabilAssinaturaEmpresa expected,
        AreaContabilAssinaturaEmpresa actual
    ) {
        assertAreaContabilAssinaturaEmpresaUpdatableFieldsEquals(expected, actual);
        assertAreaContabilAssinaturaEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilAssinaturaEmpresaAutoGeneratedPropertiesEquals(
        AreaContabilAssinaturaEmpresa expected,
        AreaContabilAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify AreaContabilAssinaturaEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilAssinaturaEmpresaUpdatableFieldsEquals(
        AreaContabilAssinaturaEmpresa expected,
        AreaContabilAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify AreaContabilAssinaturaEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getAtivo()).as("check ativo").isEqualTo(actual.getAtivo()))
            .satisfies(e -> assertThat(e.getDataAtribuicao()).as("check dataAtribuicao").isEqualTo(actual.getDataAtribuicao()))
            .satisfies(e -> assertThat(e.getDataRevogacao()).as("check dataRevogacao").isEqualTo(actual.getDataRevogacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilAssinaturaEmpresaUpdatableRelationshipsEquals(
        AreaContabilAssinaturaEmpresa expected,
        AreaContabilAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify AreaContabilAssinaturaEmpresa relationships")
            .satisfies(e -> assertThat(e.getAreaContabil()).as("check areaContabil").isEqualTo(actual.getAreaContabil()))
            .satisfies(e -> assertThat(e.getAssinaturaEmpresa()).as("check assinaturaEmpresa").isEqualTo(actual.getAssinaturaEmpresa()))
            .satisfies(e -> assertThat(e.getContador()).as("check contador").isEqualTo(actual.getContador()));
    }
}
