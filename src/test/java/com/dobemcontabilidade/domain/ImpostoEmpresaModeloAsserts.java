package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ImpostoEmpresaModeloAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoEmpresaModeloAllPropertiesEquals(ImpostoEmpresaModelo expected, ImpostoEmpresaModelo actual) {
        assertImpostoEmpresaModeloAutoGeneratedPropertiesEquals(expected, actual);
        assertImpostoEmpresaModeloAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoEmpresaModeloAllUpdatablePropertiesEquals(ImpostoEmpresaModelo expected, ImpostoEmpresaModelo actual) {
        assertImpostoEmpresaModeloUpdatableFieldsEquals(expected, actual);
        assertImpostoEmpresaModeloUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoEmpresaModeloAutoGeneratedPropertiesEquals(ImpostoEmpresaModelo expected, ImpostoEmpresaModelo actual) {
        assertThat(expected)
            .as("Verify ImpostoEmpresaModelo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoEmpresaModeloUpdatableFieldsEquals(ImpostoEmpresaModelo expected, ImpostoEmpresaModelo actual) {
        assertThat(expected)
            .as("Verify ImpostoEmpresaModelo relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getObservacao()).as("check observacao").isEqualTo(actual.getObservacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoEmpresaModeloUpdatableRelationshipsEquals(ImpostoEmpresaModelo expected, ImpostoEmpresaModelo actual) {
        assertThat(expected)
            .as("Verify ImpostoEmpresaModelo relationships")
            .satisfies(e -> assertThat(e.getEmpresaModelo()).as("check empresaModelo").isEqualTo(actual.getEmpresaModelo()))
            .satisfies(e -> assertThat(e.getImposto()).as("check imposto").isEqualTo(actual.getImposto()));
    }
}
