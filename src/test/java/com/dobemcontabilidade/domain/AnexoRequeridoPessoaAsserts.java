package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnexoRequeridoPessoaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoRequeridoPessoaAllPropertiesEquals(AnexoRequeridoPessoa expected, AnexoRequeridoPessoa actual) {
        assertAnexoRequeridoPessoaAutoGeneratedPropertiesEquals(expected, actual);
        assertAnexoRequeridoPessoaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoRequeridoPessoaAllUpdatablePropertiesEquals(AnexoRequeridoPessoa expected, AnexoRequeridoPessoa actual) {
        assertAnexoRequeridoPessoaUpdatableFieldsEquals(expected, actual);
        assertAnexoRequeridoPessoaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoRequeridoPessoaAutoGeneratedPropertiesEquals(AnexoRequeridoPessoa expected, AnexoRequeridoPessoa actual) {
        assertThat(expected)
            .as("Verify AnexoRequeridoPessoa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoRequeridoPessoaUpdatableFieldsEquals(AnexoRequeridoPessoa expected, AnexoRequeridoPessoa actual) {
        assertThat(expected)
            .as("Verify AnexoRequeridoPessoa relevant properties")
            .satisfies(e -> assertThat(e.getObrigatorio()).as("check obrigatorio").isEqualTo(actual.getObrigatorio()))
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoRequeridoPessoaUpdatableRelationshipsEquals(AnexoRequeridoPessoa expected, AnexoRequeridoPessoa actual) {
        assertThat(expected)
            .as("Verify AnexoRequeridoPessoa relationships")
            .satisfies(e -> assertThat(e.getAnexoPessoa()).as("check anexoPessoa").isEqualTo(actual.getAnexoPessoa()))
            .satisfies(e -> assertThat(e.getAnexoRequerido()).as("check anexoRequerido").isEqualTo(actual.getAnexoRequerido()));
    }
}
