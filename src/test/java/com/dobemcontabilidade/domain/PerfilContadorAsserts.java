package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PerfilContadorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfilContadorAllPropertiesEquals(PerfilContador expected, PerfilContador actual) {
        assertPerfilContadorAutoGeneratedPropertiesEquals(expected, actual);
        assertPerfilContadorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfilContadorAllUpdatablePropertiesEquals(PerfilContador expected, PerfilContador actual) {
        assertPerfilContadorUpdatableFieldsEquals(expected, actual);
        assertPerfilContadorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfilContadorAutoGeneratedPropertiesEquals(PerfilContador expected, PerfilContador actual) {
        assertThat(expected)
            .as("Verify PerfilContador auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfilContadorUpdatableFieldsEquals(PerfilContador expected, PerfilContador actual) {
        assertThat(expected)
            .as("Verify PerfilContador relevant properties")
            .satisfies(e -> assertThat(e.getPerfil()).as("check perfil").isEqualTo(actual.getPerfil()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getLimiteEmpresas()).as("check limiteEmpresas").isEqualTo(actual.getLimiteEmpresas()))
            .satisfies(
                e -> assertThat(e.getLimiteDepartamentos()).as("check limiteDepartamentos").isEqualTo(actual.getLimiteDepartamentos())
            )
            .satisfies(
                e -> assertThat(e.getLimiteAreaContabils()).as("check limiteAreaContabils").isEqualTo(actual.getLimiteAreaContabils())
            )
            .satisfies(e -> assertThat(e.getLimiteFaturamento()).as("check limiteFaturamento").isEqualTo(actual.getLimiteFaturamento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPerfilContadorUpdatableRelationshipsEquals(PerfilContador expected, PerfilContador actual) {}
}
