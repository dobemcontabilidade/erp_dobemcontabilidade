package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AtividadeEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeEmpresaAllPropertiesEquals(AtividadeEmpresa expected, AtividadeEmpresa actual) {
        assertAtividadeEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertAtividadeEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeEmpresaAllUpdatablePropertiesEquals(AtividadeEmpresa expected, AtividadeEmpresa actual) {
        assertAtividadeEmpresaUpdatableFieldsEquals(expected, actual);
        assertAtividadeEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeEmpresaAutoGeneratedPropertiesEquals(AtividadeEmpresa expected, AtividadeEmpresa actual) {
        assertThat(expected)
            .as("Verify AtividadeEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeEmpresaUpdatableFieldsEquals(AtividadeEmpresa expected, AtividadeEmpresa actual) {
        assertThat(expected)
            .as("Verify AtividadeEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getPrincipal()).as("check principal").isEqualTo(actual.getPrincipal()))
            .satisfies(e -> assertThat(e.getOrdem()).as("check ordem").isEqualTo(actual.getOrdem()))
            .satisfies(e -> assertThat(e.getDescricaoAtividade()).as("check descricaoAtividade").isEqualTo(actual.getDescricaoAtividade()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeEmpresaUpdatableRelationshipsEquals(AtividadeEmpresa expected, AtividadeEmpresa actual) {
        assertThat(expected)
            .as("Verify AtividadeEmpresa relationships")
            .satisfies(e -> assertThat(e.getEmpresa()).as("check empresa").isEqualTo(actual.getEmpresa()));
    }
}
