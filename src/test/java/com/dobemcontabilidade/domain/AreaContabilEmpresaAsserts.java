package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AreaContabilEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilEmpresaAllPropertiesEquals(AreaContabilEmpresa expected, AreaContabilEmpresa actual) {
        assertAreaContabilEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertAreaContabilEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilEmpresaAllUpdatablePropertiesEquals(AreaContabilEmpresa expected, AreaContabilEmpresa actual) {
        assertAreaContabilEmpresaUpdatableFieldsEquals(expected, actual);
        assertAreaContabilEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilEmpresaAutoGeneratedPropertiesEquals(AreaContabilEmpresa expected, AreaContabilEmpresa actual) {
        assertThat(expected)
            .as("Verify AreaContabilEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilEmpresaUpdatableFieldsEquals(AreaContabilEmpresa expected, AreaContabilEmpresa actual) {
        assertThat(expected)
            .as("Verify AreaContabilEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getPontuacao()).as("check pontuacao").isEqualTo(actual.getPontuacao()))
            .satisfies(e -> assertThat(e.getDepoimento()).as("check depoimento").isEqualTo(actual.getDepoimento()))
            .satisfies(e -> assertThat(e.getReclamacao()).as("check reclamacao").isEqualTo(actual.getReclamacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAreaContabilEmpresaUpdatableRelationshipsEquals(AreaContabilEmpresa expected, AreaContabilEmpresa actual) {
        assertThat(expected)
            .as("Verify AreaContabilEmpresa relationships")
            .satisfies(e -> assertThat(e.getContador()).as("check contador").isEqualTo(actual.getContador()));
    }
}
