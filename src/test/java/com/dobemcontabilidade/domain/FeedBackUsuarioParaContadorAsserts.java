package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FeedBackUsuarioParaContadorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedBackUsuarioParaContadorAllPropertiesEquals(
        FeedBackUsuarioParaContador expected,
        FeedBackUsuarioParaContador actual
    ) {
        assertFeedBackUsuarioParaContadorAutoGeneratedPropertiesEquals(expected, actual);
        assertFeedBackUsuarioParaContadorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedBackUsuarioParaContadorAllUpdatablePropertiesEquals(
        FeedBackUsuarioParaContador expected,
        FeedBackUsuarioParaContador actual
    ) {
        assertFeedBackUsuarioParaContadorUpdatableFieldsEquals(expected, actual);
        assertFeedBackUsuarioParaContadorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedBackUsuarioParaContadorAutoGeneratedPropertiesEquals(
        FeedBackUsuarioParaContador expected,
        FeedBackUsuarioParaContador actual
    ) {
        assertThat(expected)
            .as("Verify FeedBackUsuarioParaContador auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedBackUsuarioParaContadorUpdatableFieldsEquals(
        FeedBackUsuarioParaContador expected,
        FeedBackUsuarioParaContador actual
    ) {
        assertThat(expected)
            .as("Verify FeedBackUsuarioParaContador relevant properties")
            .satisfies(e -> assertThat(e.getComentario()).as("check comentario").isEqualTo(actual.getComentario()))
            .satisfies(e -> assertThat(e.getPontuacao()).as("check pontuacao").isEqualTo(actual.getPontuacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeedBackUsuarioParaContadorUpdatableRelationshipsEquals(
        FeedBackUsuarioParaContador expected,
        FeedBackUsuarioParaContador actual
    ) {
        assertThat(expected)
            .as("Verify FeedBackUsuarioParaContador relationships")
            .satisfies(e -> assertThat(e.getUsuarioEmpresa()).as("check usuarioEmpresa").isEqualTo(actual.getUsuarioEmpresa()))
            .satisfies(e -> assertThat(e.getUsuarioContador()).as("check usuarioContador").isEqualTo(actual.getUsuarioContador()))
            .satisfies(
                e -> assertThat(e.getCriterioAvaliacaoAtor()).as("check criterioAvaliacaoAtor").isEqualTo(actual.getCriterioAvaliacaoAtor())
            )
            .satisfies(e -> assertThat(e.getOrdemServico()).as("check ordemServico").isEqualTo(actual.getOrdemServico()));
    }
}
