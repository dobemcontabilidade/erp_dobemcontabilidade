package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GatewayAssinaturaEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGatewayAssinaturaEmpresaAllPropertiesEquals(
        GatewayAssinaturaEmpresa expected,
        GatewayAssinaturaEmpresa actual
    ) {
        assertGatewayAssinaturaEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertGatewayAssinaturaEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGatewayAssinaturaEmpresaAllUpdatablePropertiesEquals(
        GatewayAssinaturaEmpresa expected,
        GatewayAssinaturaEmpresa actual
    ) {
        assertGatewayAssinaturaEmpresaUpdatableFieldsEquals(expected, actual);
        assertGatewayAssinaturaEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGatewayAssinaturaEmpresaAutoGeneratedPropertiesEquals(
        GatewayAssinaturaEmpresa expected,
        GatewayAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify GatewayAssinaturaEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGatewayAssinaturaEmpresaUpdatableFieldsEquals(
        GatewayAssinaturaEmpresa expected,
        GatewayAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify GatewayAssinaturaEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getAtivo()).as("check ativo").isEqualTo(actual.getAtivo()))
            .satisfies(e -> assertThat(e.getCodigoAssinatura()).as("check codigoAssinatura").isEqualTo(actual.getCodigoAssinatura()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGatewayAssinaturaEmpresaUpdatableRelationshipsEquals(
        GatewayAssinaturaEmpresa expected,
        GatewayAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify GatewayAssinaturaEmpresa relationships")
            .satisfies(e -> assertThat(e.getAssinaturaEmpresa()).as("check assinaturaEmpresa").isEqualTo(actual.getAssinaturaEmpresa()))
            .satisfies(e -> assertThat(e.getGatewayPagamento()).as("check gatewayPagamento").isEqualTo(actual.getGatewayPagamento()));
    }
}
