package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OpcaoRazaoSocialEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoRazaoSocialEmpresaAllPropertiesEquals(OpcaoRazaoSocialEmpresa expected, OpcaoRazaoSocialEmpresa actual) {
        assertOpcaoRazaoSocialEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertOpcaoRazaoSocialEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoRazaoSocialEmpresaAllUpdatablePropertiesEquals(
        OpcaoRazaoSocialEmpresa expected,
        OpcaoRazaoSocialEmpresa actual
    ) {
        assertOpcaoRazaoSocialEmpresaUpdatableFieldsEquals(expected, actual);
        assertOpcaoRazaoSocialEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoRazaoSocialEmpresaAutoGeneratedPropertiesEquals(
        OpcaoRazaoSocialEmpresa expected,
        OpcaoRazaoSocialEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify OpcaoRazaoSocialEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoRazaoSocialEmpresaUpdatableFieldsEquals(
        OpcaoRazaoSocialEmpresa expected,
        OpcaoRazaoSocialEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify OpcaoRazaoSocialEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getOrdem()).as("check ordem").isEqualTo(actual.getOrdem()))
            .satisfies(e -> assertThat(e.getSelecionado()).as("check selecionado").isEqualTo(actual.getSelecionado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoRazaoSocialEmpresaUpdatableRelationshipsEquals(
        OpcaoRazaoSocialEmpresa expected,
        OpcaoRazaoSocialEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify OpcaoRazaoSocialEmpresa relationships")
            .satisfies(e -> assertThat(e.getEmpresa()).as("check empresa").isEqualTo(actual.getEmpresa()));
    }
}
