package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GrupoAcessoUsuarioEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoAcessoUsuarioEmpresaAllPropertiesEquals(
        GrupoAcessoUsuarioEmpresa expected,
        GrupoAcessoUsuarioEmpresa actual
    ) {
        assertGrupoAcessoUsuarioEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertGrupoAcessoUsuarioEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoAcessoUsuarioEmpresaAllUpdatablePropertiesEquals(
        GrupoAcessoUsuarioEmpresa expected,
        GrupoAcessoUsuarioEmpresa actual
    ) {
        assertGrupoAcessoUsuarioEmpresaUpdatableFieldsEquals(expected, actual);
        assertGrupoAcessoUsuarioEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoAcessoUsuarioEmpresaAutoGeneratedPropertiesEquals(
        GrupoAcessoUsuarioEmpresa expected,
        GrupoAcessoUsuarioEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify GrupoAcessoUsuarioEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoAcessoUsuarioEmpresaUpdatableFieldsEquals(
        GrupoAcessoUsuarioEmpresa expected,
        GrupoAcessoUsuarioEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify GrupoAcessoUsuarioEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getDataExpiracao()).as("check dataExpiracao").isEqualTo(actual.getDataExpiracao()))
            .satisfies(e -> assertThat(e.getIlimitado()).as("check ilimitado").isEqualTo(actual.getIlimitado()))
            .satisfies(e -> assertThat(e.getDesabilitar()).as("check desabilitar").isEqualTo(actual.getDesabilitar()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrupoAcessoUsuarioEmpresaUpdatableRelationshipsEquals(
        GrupoAcessoUsuarioEmpresa expected,
        GrupoAcessoUsuarioEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify GrupoAcessoUsuarioEmpresa relationships")
            .satisfies(e -> assertThat(e.getGrupoAcessoEmpresa()).as("check grupoAcessoEmpresa").isEqualTo(actual.getGrupoAcessoEmpresa()))
            .satisfies(e -> assertThat(e.getUsuarioEmpresa()).as("check usuarioEmpresa").isEqualTo(actual.getUsuarioEmpresa()));
    }
}
