package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DocsEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsEmpresaAllPropertiesEquals(DocsEmpresa expected, DocsEmpresa actual) {
        assertDocsEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertDocsEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsEmpresaAllUpdatablePropertiesEquals(DocsEmpresa expected, DocsEmpresa actual) {
        assertDocsEmpresaUpdatableFieldsEquals(expected, actual);
        assertDocsEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsEmpresaAutoGeneratedPropertiesEquals(DocsEmpresa expected, DocsEmpresa actual) {
        assertThat(expected)
            .as("Verify DocsEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsEmpresaUpdatableFieldsEquals(DocsEmpresa expected, DocsEmpresa actual) {
        assertThat(expected)
            .as("Verify DocsEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getDocumento()).as("check documento").isEqualTo(actual.getDocumento()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getDataEmissao()).as("check dataEmissao").isEqualTo(actual.getDataEmissao()))
            .satisfies(e -> assertThat(e.getDataEncerramento()).as("check dataEncerramento").isEqualTo(actual.getDataEncerramento()))
            .satisfies(e -> assertThat(e.getOrgaoEmissor()).as("check orgaoEmissor").isEqualTo(actual.getOrgaoEmissor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsEmpresaUpdatableRelationshipsEquals(DocsEmpresa expected, DocsEmpresa actual) {
        assertThat(expected)
            .as("Verify DocsEmpresa relationships")
            .satisfies(e -> assertThat(e.getPessoaJuridica()).as("check pessoaJuridica").isEqualTo(actual.getPessoaJuridica()));
    }
}
