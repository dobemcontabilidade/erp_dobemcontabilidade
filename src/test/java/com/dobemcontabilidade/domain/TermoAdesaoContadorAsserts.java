package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TermoAdesaoContadorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoContadorAllPropertiesEquals(TermoAdesaoContador expected, TermoAdesaoContador actual) {
        assertTermoAdesaoContadorAutoGeneratedPropertiesEquals(expected, actual);
        assertTermoAdesaoContadorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoContadorAllUpdatablePropertiesEquals(TermoAdesaoContador expected, TermoAdesaoContador actual) {
        assertTermoAdesaoContadorUpdatableFieldsEquals(expected, actual);
        assertTermoAdesaoContadorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoContadorAutoGeneratedPropertiesEquals(TermoAdesaoContador expected, TermoAdesaoContador actual) {
        assertThat(expected)
            .as("Verify TermoAdesaoContador auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoContadorUpdatableFieldsEquals(TermoAdesaoContador expected, TermoAdesaoContador actual) {
        assertThat(expected)
            .as("Verify TermoAdesaoContador relevant properties")
            .satisfies(e -> assertThat(e.getDataAdesao()).as("check dataAdesao").isEqualTo(actual.getDataAdesao()))
            .satisfies(e -> assertThat(e.getChecked()).as("check checked").isEqualTo(actual.getChecked()))
            .satisfies(e -> assertThat(e.getUrlDoc()).as("check urlDoc").isEqualTo(actual.getUrlDoc()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoAdesaoContadorUpdatableRelationshipsEquals(TermoAdesaoContador expected, TermoAdesaoContador actual) {
        assertThat(expected)
            .as("Verify TermoAdesaoContador relationships")
            .satisfies(e -> assertThat(e.getContador()).as("check contador").isEqualTo(actual.getContador()))
            .satisfies(e -> assertThat(e.getTermoDeAdesao()).as("check termoDeAdesao").isEqualTo(actual.getTermoDeAdesao()));
    }
}
