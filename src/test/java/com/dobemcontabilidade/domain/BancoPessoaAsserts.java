package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BancoPessoaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBancoPessoaAllPropertiesEquals(BancoPessoa expected, BancoPessoa actual) {
        assertBancoPessoaAutoGeneratedPropertiesEquals(expected, actual);
        assertBancoPessoaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBancoPessoaAllUpdatablePropertiesEquals(BancoPessoa expected, BancoPessoa actual) {
        assertBancoPessoaUpdatableFieldsEquals(expected, actual);
        assertBancoPessoaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBancoPessoaAutoGeneratedPropertiesEquals(BancoPessoa expected, BancoPessoa actual) {
        assertThat(expected)
            .as("Verify BancoPessoa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBancoPessoaUpdatableFieldsEquals(BancoPessoa expected, BancoPessoa actual) {
        assertThat(expected)
            .as("Verify BancoPessoa relevant properties")
            .satisfies(e -> assertThat(e.getAgencia()).as("check agencia").isEqualTo(actual.getAgencia()))
            .satisfies(e -> assertThat(e.getConta()).as("check conta").isEqualTo(actual.getConta()))
            .satisfies(e -> assertThat(e.getTipoConta()).as("check tipoConta").isEqualTo(actual.getTipoConta()))
            .satisfies(e -> assertThat(e.getPrincipal()).as("check principal").isEqualTo(actual.getPrincipal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBancoPessoaUpdatableRelationshipsEquals(BancoPessoa expected, BancoPessoa actual) {
        assertThat(expected)
            .as("Verify BancoPessoa relationships")
            .satisfies(e -> assertThat(e.getPessoa()).as("check pessoa").isEqualTo(actual.getPessoa()))
            .satisfies(e -> assertThat(e.getBanco()).as("check banco").isEqualTo(actual.getBanco()));
    }
}
