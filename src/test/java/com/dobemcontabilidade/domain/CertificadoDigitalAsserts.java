package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CertificadoDigitalAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalAllPropertiesEquals(CertificadoDigital expected, CertificadoDigital actual) {
        assertCertificadoDigitalAutoGeneratedPropertiesEquals(expected, actual);
        assertCertificadoDigitalAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalAllUpdatablePropertiesEquals(CertificadoDigital expected, CertificadoDigital actual) {
        assertCertificadoDigitalUpdatableFieldsEquals(expected, actual);
        assertCertificadoDigitalUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalAutoGeneratedPropertiesEquals(CertificadoDigital expected, CertificadoDigital actual) {
        assertThat(expected)
            .as("Verify CertificadoDigital auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalUpdatableFieldsEquals(CertificadoDigital expected, CertificadoDigital actual) {
        assertThat(expected)
            .as("Verify CertificadoDigital relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getSigla()).as("check sigla").isEqualTo(actual.getSigla()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getTipoCertificado()).as("check tipoCertificado").isEqualTo(actual.getTipoCertificado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalUpdatableRelationshipsEquals(CertificadoDigital expected, CertificadoDigital actual) {}
}
