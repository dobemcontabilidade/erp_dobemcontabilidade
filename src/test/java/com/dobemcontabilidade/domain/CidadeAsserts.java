package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CidadeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadeAllPropertiesEquals(Cidade expected, Cidade actual) {
        assertCidadeAutoGeneratedPropertiesEquals(expected, actual);
        assertCidadeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadeAllUpdatablePropertiesEquals(Cidade expected, Cidade actual) {
        assertCidadeUpdatableFieldsEquals(expected, actual);
        assertCidadeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadeAutoGeneratedPropertiesEquals(Cidade expected, Cidade actual) {
        assertThat(expected)
            .as("Verify Cidade auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadeUpdatableFieldsEquals(Cidade expected, Cidade actual) {
        assertThat(expected)
            .as("Verify Cidade relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getContratacao()).as("check contratacao").isEqualTo(actual.getContratacao()))
            .satisfies(e -> assertThat(e.getAbertura()).as("check abertura").isEqualTo(actual.getAbertura()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCidadeUpdatableRelationshipsEquals(Cidade expected, Cidade actual) {
        assertThat(expected)
            .as("Verify Cidade relationships")
            .satisfies(e -> assertThat(e.getEstado()).as("check estado").isEqualTo(actual.getEstado()));
    }
}
