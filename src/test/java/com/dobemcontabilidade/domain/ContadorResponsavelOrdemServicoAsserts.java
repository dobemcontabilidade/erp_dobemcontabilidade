package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContadorResponsavelOrdemServicoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelOrdemServicoAllPropertiesEquals(
        ContadorResponsavelOrdemServico expected,
        ContadorResponsavelOrdemServico actual
    ) {
        assertContadorResponsavelOrdemServicoAutoGeneratedPropertiesEquals(expected, actual);
        assertContadorResponsavelOrdemServicoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelOrdemServicoAllUpdatablePropertiesEquals(
        ContadorResponsavelOrdemServico expected,
        ContadorResponsavelOrdemServico actual
    ) {
        assertContadorResponsavelOrdemServicoUpdatableFieldsEquals(expected, actual);
        assertContadorResponsavelOrdemServicoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelOrdemServicoAutoGeneratedPropertiesEquals(
        ContadorResponsavelOrdemServico expected,
        ContadorResponsavelOrdemServico actual
    ) {
        assertThat(expected)
            .as("Verify ContadorResponsavelOrdemServico auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelOrdemServicoUpdatableFieldsEquals(
        ContadorResponsavelOrdemServico expected,
        ContadorResponsavelOrdemServico actual
    ) {
        assertThat(expected)
            .as("Verify ContadorResponsavelOrdemServico relevant properties")
            .satisfies(e -> assertThat(e.getDataAtribuicao()).as("check dataAtribuicao").isEqualTo(actual.getDataAtribuicao()))
            .satisfies(e -> assertThat(e.getDataRevogacao()).as("check dataRevogacao").isEqualTo(actual.getDataRevogacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelOrdemServicoUpdatableRelationshipsEquals(
        ContadorResponsavelOrdemServico expected,
        ContadorResponsavelOrdemServico actual
    ) {
        assertThat(expected)
            .as("Verify ContadorResponsavelOrdemServico relationships")
            .satisfies(
                e ->
                    assertThat(e.getTarefaOrdemServicoExecucao())
                        .as("check tarefaOrdemServicoExecucao")
                        .isEqualTo(actual.getTarefaOrdemServicoExecucao())
            )
            .satisfies(e -> assertThat(e.getContador()).as("check contador").isEqualTo(actual.getContador()));
    }
}
