package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ServicoContabilAssinaturaEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServicoContabilAssinaturaEmpresaAllPropertiesEquals(
        ServicoContabilAssinaturaEmpresa expected,
        ServicoContabilAssinaturaEmpresa actual
    ) {
        assertServicoContabilAssinaturaEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertServicoContabilAssinaturaEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServicoContabilAssinaturaEmpresaAllUpdatablePropertiesEquals(
        ServicoContabilAssinaturaEmpresa expected,
        ServicoContabilAssinaturaEmpresa actual
    ) {
        assertServicoContabilAssinaturaEmpresaUpdatableFieldsEquals(expected, actual);
        assertServicoContabilAssinaturaEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServicoContabilAssinaturaEmpresaAutoGeneratedPropertiesEquals(
        ServicoContabilAssinaturaEmpresa expected,
        ServicoContabilAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify ServicoContabilAssinaturaEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServicoContabilAssinaturaEmpresaUpdatableFieldsEquals(
        ServicoContabilAssinaturaEmpresa expected,
        ServicoContabilAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify ServicoContabilAssinaturaEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getDataLegal()).as("check dataLegal").isEqualTo(actual.getDataLegal()))
            .satisfies(e -> assertThat(e.getDataAdmin()).as("check dataAdmin").isEqualTo(actual.getDataAdmin()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServicoContabilAssinaturaEmpresaUpdatableRelationshipsEquals(
        ServicoContabilAssinaturaEmpresa expected,
        ServicoContabilAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify ServicoContabilAssinaturaEmpresa relationships")
            .satisfies(e -> assertThat(e.getServicoContabil()).as("check servicoContabil").isEqualTo(actual.getServicoContabil()))
            .satisfies(e -> assertThat(e.getAssinaturaEmpresa()).as("check assinaturaEmpresa").isEqualTo(actual.getAssinaturaEmpresa()));
    }
}
