package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContadorResponsavelTarefaRecorrenteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelTarefaRecorrenteAllPropertiesEquals(
        ContadorResponsavelTarefaRecorrente expected,
        ContadorResponsavelTarefaRecorrente actual
    ) {
        assertContadorResponsavelTarefaRecorrenteAutoGeneratedPropertiesEquals(expected, actual);
        assertContadorResponsavelTarefaRecorrenteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelTarefaRecorrenteAllUpdatablePropertiesEquals(
        ContadorResponsavelTarefaRecorrente expected,
        ContadorResponsavelTarefaRecorrente actual
    ) {
        assertContadorResponsavelTarefaRecorrenteUpdatableFieldsEquals(expected, actual);
        assertContadorResponsavelTarefaRecorrenteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelTarefaRecorrenteAutoGeneratedPropertiesEquals(
        ContadorResponsavelTarefaRecorrente expected,
        ContadorResponsavelTarefaRecorrente actual
    ) {
        assertThat(expected)
            .as("Verify ContadorResponsavelTarefaRecorrente auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelTarefaRecorrenteUpdatableFieldsEquals(
        ContadorResponsavelTarefaRecorrente expected,
        ContadorResponsavelTarefaRecorrente actual
    ) {
        assertThat(expected)
            .as("Verify ContadorResponsavelTarefaRecorrente relevant properties")
            .satisfies(e -> assertThat(e.getDataAtribuicao()).as("check dataAtribuicao").isEqualTo(actual.getDataAtribuicao()))
            .satisfies(e -> assertThat(e.getDataRevogacao()).as("check dataRevogacao").isEqualTo(actual.getDataRevogacao()))
            .satisfies(e -> assertThat(e.getConcluida()).as("check concluida").isEqualTo(actual.getConcluida()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContadorResponsavelTarefaRecorrenteUpdatableRelationshipsEquals(
        ContadorResponsavelTarefaRecorrente expected,
        ContadorResponsavelTarefaRecorrente actual
    ) {
        assertThat(expected)
            .as("Verify ContadorResponsavelTarefaRecorrente relationships")
            .satisfies(
                e ->
                    assertThat(e.getTarefaRecorrenteExecucao())
                        .as("check tarefaRecorrenteExecucao")
                        .isEqualTo(actual.getTarefaRecorrenteExecucao())
            )
            .satisfies(e -> assertThat(e.getContador()).as("check contador").isEqualTo(actual.getContador()));
    }
}
