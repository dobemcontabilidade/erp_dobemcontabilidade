package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TermoContratoAssinaturaEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoContratoAssinaturaEmpresaAllPropertiesEquals(
        TermoContratoAssinaturaEmpresa expected,
        TermoContratoAssinaturaEmpresa actual
    ) {
        assertTermoContratoAssinaturaEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertTermoContratoAssinaturaEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoContratoAssinaturaEmpresaAllUpdatablePropertiesEquals(
        TermoContratoAssinaturaEmpresa expected,
        TermoContratoAssinaturaEmpresa actual
    ) {
        assertTermoContratoAssinaturaEmpresaUpdatableFieldsEquals(expected, actual);
        assertTermoContratoAssinaturaEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoContratoAssinaturaEmpresaAutoGeneratedPropertiesEquals(
        TermoContratoAssinaturaEmpresa expected,
        TermoContratoAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify TermoContratoAssinaturaEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoContratoAssinaturaEmpresaUpdatableFieldsEquals(
        TermoContratoAssinaturaEmpresa expected,
        TermoContratoAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify TermoContratoAssinaturaEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getDataAssinatura()).as("check dataAssinatura").isEqualTo(actual.getDataAssinatura()))
            .satisfies(e -> assertThat(e.getDataEnvioEmail()).as("check dataEnvioEmail").isEqualTo(actual.getDataEnvioEmail()))
            .satisfies(
                e -> assertThat(e.getUrlDocumentoAssinado()).as("check urlDocumentoAssinado").isEqualTo(actual.getUrlDocumentoAssinado())
            )
            .satisfies(e -> assertThat(e.getSituacao()).as("check situacao").isEqualTo(actual.getSituacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTermoContratoAssinaturaEmpresaUpdatableRelationshipsEquals(
        TermoContratoAssinaturaEmpresa expected,
        TermoContratoAssinaturaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify TermoContratoAssinaturaEmpresa relationships")
            .satisfies(
                e -> assertThat(e.getTermoContratoContabil()).as("check termoContratoContabil").isEqualTo(actual.getTermoContratoContabil())
            )
            .satisfies(e -> assertThat(e.getEmpresa()).as("check empresa").isEqualTo(actual.getEmpresa()));
    }
}
