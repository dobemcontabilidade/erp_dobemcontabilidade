package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AdicionalTributacaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdicionalTributacaoAllPropertiesEquals(AdicionalTributacao expected, AdicionalTributacao actual) {
        assertAdicionalTributacaoAutoGeneratedPropertiesEquals(expected, actual);
        assertAdicionalTributacaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdicionalTributacaoAllUpdatablePropertiesEquals(AdicionalTributacao expected, AdicionalTributacao actual) {
        assertAdicionalTributacaoUpdatableFieldsEquals(expected, actual);
        assertAdicionalTributacaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdicionalTributacaoAutoGeneratedPropertiesEquals(AdicionalTributacao expected, AdicionalTributacao actual) {
        assertThat(expected)
            .as("Verify AdicionalTributacao auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdicionalTributacaoUpdatableFieldsEquals(AdicionalTributacao expected, AdicionalTributacao actual) {
        assertThat(expected)
            .as("Verify AdicionalTributacao relevant properties")
            .satisfies(e -> assertThat(e.getValor()).as("check valor").isEqualTo(actual.getValor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdicionalTributacaoUpdatableRelationshipsEquals(AdicionalTributacao expected, AdicionalTributacao actual) {
        assertThat(expected)
            .as("Verify AdicionalTributacao relationships")
            .satisfies(e -> assertThat(e.getTributacao()).as("check tributacao").isEqualTo(actual.getTributacao()))
            .satisfies(e -> assertThat(e.getPlanoContabil()).as("check planoContabil").isEqualTo(actual.getPlanoContabil()));
    }
}
