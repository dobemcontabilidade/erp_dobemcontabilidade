package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OpcaoNomeFantasiaEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoNomeFantasiaEmpresaAllPropertiesEquals(
        OpcaoNomeFantasiaEmpresa expected,
        OpcaoNomeFantasiaEmpresa actual
    ) {
        assertOpcaoNomeFantasiaEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertOpcaoNomeFantasiaEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoNomeFantasiaEmpresaAllUpdatablePropertiesEquals(
        OpcaoNomeFantasiaEmpresa expected,
        OpcaoNomeFantasiaEmpresa actual
    ) {
        assertOpcaoNomeFantasiaEmpresaUpdatableFieldsEquals(expected, actual);
        assertOpcaoNomeFantasiaEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoNomeFantasiaEmpresaAutoGeneratedPropertiesEquals(
        OpcaoNomeFantasiaEmpresa expected,
        OpcaoNomeFantasiaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify OpcaoNomeFantasiaEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoNomeFantasiaEmpresaUpdatableFieldsEquals(
        OpcaoNomeFantasiaEmpresa expected,
        OpcaoNomeFantasiaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify OpcaoNomeFantasiaEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getOrdem()).as("check ordem").isEqualTo(actual.getOrdem()))
            .satisfies(e -> assertThat(e.getSelecionado()).as("check selecionado").isEqualTo(actual.getSelecionado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpcaoNomeFantasiaEmpresaUpdatableRelationshipsEquals(
        OpcaoNomeFantasiaEmpresa expected,
        OpcaoNomeFantasiaEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify OpcaoNomeFantasiaEmpresa relationships")
            .satisfies(e -> assertThat(e.getEmpresa()).as("check empresa").isEqualTo(actual.getEmpresa()));
    }
}
