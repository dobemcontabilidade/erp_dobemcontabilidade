package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DocsPessoaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsPessoaAllPropertiesEquals(DocsPessoa expected, DocsPessoa actual) {
        assertDocsPessoaAutoGeneratedPropertiesEquals(expected, actual);
        assertDocsPessoaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsPessoaAllUpdatablePropertiesEquals(DocsPessoa expected, DocsPessoa actual) {
        assertDocsPessoaUpdatableFieldsEquals(expected, actual);
        assertDocsPessoaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsPessoaAutoGeneratedPropertiesEquals(DocsPessoa expected, DocsPessoa actual) {
        assertThat(expected)
            .as("Verify DocsPessoa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsPessoaUpdatableFieldsEquals(DocsPessoa expected, DocsPessoa actual) {
        assertThat(expected)
            .as("Verify DocsPessoa relevant properties")
            .satisfies(e -> assertThat(e.getUrlArquivo()).as("check urlArquivo").isEqualTo(actual.getUrlArquivo()))
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocsPessoaUpdatableRelationshipsEquals(DocsPessoa expected, DocsPessoa actual) {
        assertThat(expected)
            .as("Verify DocsPessoa relationships")
            .satisfies(e -> assertThat(e.getPessoa()).as("check pessoa").isEqualTo(actual.getPessoa()));
    }
}
