package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RedeSocialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedeSocialAllPropertiesEquals(RedeSocial expected, RedeSocial actual) {
        assertRedeSocialAutoGeneratedPropertiesEquals(expected, actual);
        assertRedeSocialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedeSocialAllUpdatablePropertiesEquals(RedeSocial expected, RedeSocial actual) {
        assertRedeSocialUpdatableFieldsEquals(expected, actual);
        assertRedeSocialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedeSocialAutoGeneratedPropertiesEquals(RedeSocial expected, RedeSocial actual) {
        assertThat(expected)
            .as("Verify RedeSocial auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedeSocialUpdatableFieldsEquals(RedeSocial expected, RedeSocial actual) {
        assertThat(expected)
            .as("Verify RedeSocial relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getLogo()).as("check logo").isEqualTo(actual.getLogo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedeSocialUpdatableRelationshipsEquals(RedeSocial expected, RedeSocial actual) {}
}
