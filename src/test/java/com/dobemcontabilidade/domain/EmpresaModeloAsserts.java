package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmpresaModeloAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaModeloAllPropertiesEquals(EmpresaModelo expected, EmpresaModelo actual) {
        assertEmpresaModeloAutoGeneratedPropertiesEquals(expected, actual);
        assertEmpresaModeloAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaModeloAllUpdatablePropertiesEquals(EmpresaModelo expected, EmpresaModelo actual) {
        assertEmpresaModeloUpdatableFieldsEquals(expected, actual);
        assertEmpresaModeloUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaModeloAutoGeneratedPropertiesEquals(EmpresaModelo expected, EmpresaModelo actual) {
        assertThat(expected)
            .as("Verify EmpresaModelo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaModeloUpdatableFieldsEquals(EmpresaModelo expected, EmpresaModelo actual) {
        assertThat(expected)
            .as("Verify EmpresaModelo relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getObservacao()).as("check observacao").isEqualTo(actual.getObservacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaModeloUpdatableRelationshipsEquals(EmpresaModelo expected, EmpresaModelo actual) {
        assertThat(expected)
            .as("Verify EmpresaModelo relationships")
            .satisfies(e -> assertThat(e.getSegmentoCnaes()).as("check segmentoCnaes").isEqualTo(actual.getSegmentoCnaes()))
            .satisfies(e -> assertThat(e.getRamo()).as("check ramo").isEqualTo(actual.getRamo()))
            .satisfies(e -> assertThat(e.getEnquadramento()).as("check enquadramento").isEqualTo(actual.getEnquadramento()))
            .satisfies(e -> assertThat(e.getTributacao()).as("check tributacao").isEqualTo(actual.getTributacao()))
            .satisfies(e -> assertThat(e.getCidade()).as("check cidade").isEqualTo(actual.getCidade()));
    }
}
