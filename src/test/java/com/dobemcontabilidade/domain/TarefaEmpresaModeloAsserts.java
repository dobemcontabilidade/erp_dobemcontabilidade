package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TarefaEmpresaModeloAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTarefaEmpresaModeloAllPropertiesEquals(TarefaEmpresaModelo expected, TarefaEmpresaModelo actual) {
        assertTarefaEmpresaModeloAutoGeneratedPropertiesEquals(expected, actual);
        assertTarefaEmpresaModeloAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTarefaEmpresaModeloAllUpdatablePropertiesEquals(TarefaEmpresaModelo expected, TarefaEmpresaModelo actual) {
        assertTarefaEmpresaModeloUpdatableFieldsEquals(expected, actual);
        assertTarefaEmpresaModeloUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTarefaEmpresaModeloAutoGeneratedPropertiesEquals(TarefaEmpresaModelo expected, TarefaEmpresaModelo actual) {
        assertThat(expected)
            .as("Verify TarefaEmpresaModelo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTarefaEmpresaModeloUpdatableFieldsEquals(TarefaEmpresaModelo expected, TarefaEmpresaModelo actual) {
        assertThat(expected)
            .as("Verify TarefaEmpresaModelo relevant properties")
            .satisfies(e -> assertThat(e.getDataAdmin()).as("check dataAdmin").isEqualTo(actual.getDataAdmin()))
            .satisfies(e -> assertThat(e.getDataLegal()).as("check dataLegal").isEqualTo(actual.getDataLegal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTarefaEmpresaModeloUpdatableRelationshipsEquals(TarefaEmpresaModelo expected, TarefaEmpresaModelo actual) {
        assertThat(expected)
            .as("Verify TarefaEmpresaModelo relationships")
            .satisfies(e -> assertThat(e.getEmpresaModelo()).as("check empresaModelo").isEqualTo(actual.getEmpresaModelo()))
            .satisfies(e -> assertThat(e.getServicoContabil()).as("check servicoContabil").isEqualTo(actual.getServicoContabil()));
    }
}
