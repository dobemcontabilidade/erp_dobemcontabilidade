package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AvaliacaoContadorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvaliacaoContadorAllPropertiesEquals(AvaliacaoContador expected, AvaliacaoContador actual) {
        assertAvaliacaoContadorAutoGeneratedPropertiesEquals(expected, actual);
        assertAvaliacaoContadorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvaliacaoContadorAllUpdatablePropertiesEquals(AvaliacaoContador expected, AvaliacaoContador actual) {
        assertAvaliacaoContadorUpdatableFieldsEquals(expected, actual);
        assertAvaliacaoContadorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvaliacaoContadorAutoGeneratedPropertiesEquals(AvaliacaoContador expected, AvaliacaoContador actual) {
        assertThat(expected)
            .as("Verify AvaliacaoContador auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvaliacaoContadorUpdatableFieldsEquals(AvaliacaoContador expected, AvaliacaoContador actual) {
        assertThat(expected)
            .as("Verify AvaliacaoContador relevant properties")
            .satisfies(e -> assertThat(e.getPontuacao()).as("check pontuacao").isEqualTo(actual.getPontuacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAvaliacaoContadorUpdatableRelationshipsEquals(AvaliacaoContador expected, AvaliacaoContador actual) {
        assertThat(expected)
            .as("Verify AvaliacaoContador relationships")
            .satisfies(e -> assertThat(e.getContador()).as("check contador").isEqualTo(actual.getContador()))
            .satisfies(e -> assertThat(e.getAvaliacao()).as("check avaliacao").isEqualTo(actual.getAvaliacao()));
    }
}
