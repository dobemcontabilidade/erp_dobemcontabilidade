package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CriterioAvaliacaoAtorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCriterioAvaliacaoAtorAllPropertiesEquals(CriterioAvaliacaoAtor expected, CriterioAvaliacaoAtor actual) {
        assertCriterioAvaliacaoAtorAutoGeneratedPropertiesEquals(expected, actual);
        assertCriterioAvaliacaoAtorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCriterioAvaliacaoAtorAllUpdatablePropertiesEquals(
        CriterioAvaliacaoAtor expected,
        CriterioAvaliacaoAtor actual
    ) {
        assertCriterioAvaliacaoAtorUpdatableFieldsEquals(expected, actual);
        assertCriterioAvaliacaoAtorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCriterioAvaliacaoAtorAutoGeneratedPropertiesEquals(
        CriterioAvaliacaoAtor expected,
        CriterioAvaliacaoAtor actual
    ) {
        assertThat(expected)
            .as("Verify CriterioAvaliacaoAtor auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCriterioAvaliacaoAtorUpdatableFieldsEquals(CriterioAvaliacaoAtor expected, CriterioAvaliacaoAtor actual) {
        assertThat(expected)
            .as("Verify CriterioAvaliacaoAtor relevant properties")
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getAtivo()).as("check ativo").isEqualTo(actual.getAtivo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCriterioAvaliacaoAtorUpdatableRelationshipsEquals(
        CriterioAvaliacaoAtor expected,
        CriterioAvaliacaoAtor actual
    ) {
        assertThat(expected)
            .as("Verify CriterioAvaliacaoAtor relationships")
            .satisfies(e -> assertThat(e.getCriterioAvaliacao()).as("check criterioAvaliacao").isEqualTo(actual.getCriterioAvaliacao()))
            .satisfies(e -> assertThat(e.getAtorAvaliado()).as("check atorAvaliado").isEqualTo(actual.getAtorAvaliado()));
    }
}
