package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CertificadoDigitalEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalEmpresaAllPropertiesEquals(
        CertificadoDigitalEmpresa expected,
        CertificadoDigitalEmpresa actual
    ) {
        assertCertificadoDigitalEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertCertificadoDigitalEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalEmpresaAllUpdatablePropertiesEquals(
        CertificadoDigitalEmpresa expected,
        CertificadoDigitalEmpresa actual
    ) {
        assertCertificadoDigitalEmpresaUpdatableFieldsEquals(expected, actual);
        assertCertificadoDigitalEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalEmpresaAutoGeneratedPropertiesEquals(
        CertificadoDigitalEmpresa expected,
        CertificadoDigitalEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify CertificadoDigitalEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalEmpresaUpdatableFieldsEquals(
        CertificadoDigitalEmpresa expected,
        CertificadoDigitalEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify CertificadoDigitalEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getUrlCertificado()).as("check urlCertificado").isEqualTo(actual.getUrlCertificado()))
            .satisfies(e -> assertThat(e.getDataContratacao()).as("check dataContratacao").isEqualTo(actual.getDataContratacao()))
            .satisfies(e -> assertThat(e.getDataVencimento()).as("check dataVencimento").isEqualTo(actual.getDataVencimento()))
            .satisfies(e -> assertThat(e.getDiasUso()).as("check diasUso").isEqualTo(actual.getDiasUso()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificadoDigitalEmpresaUpdatableRelationshipsEquals(
        CertificadoDigitalEmpresa expected,
        CertificadoDigitalEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify CertificadoDigitalEmpresa relationships")
            .satisfies(e -> assertThat(e.getPessoaJuridica()).as("check pessoaJuridica").isEqualTo(actual.getPessoaJuridica()))
            .satisfies(e -> assertThat(e.getCertificadoDigital()).as("check certificadoDigital").isEqualTo(actual.getCertificadoDigital()))
            .satisfies(
                e -> assertThat(e.getFornecedorCertificado()).as("check fornecedorCertificado").isEqualTo(actual.getFornecedorCertificado())
            );
    }
}
