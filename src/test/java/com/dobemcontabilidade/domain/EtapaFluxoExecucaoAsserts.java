package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EtapaFluxoExecucaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtapaFluxoExecucaoAllPropertiesEquals(EtapaFluxoExecucao expected, EtapaFluxoExecucao actual) {
        assertEtapaFluxoExecucaoAutoGeneratedPropertiesEquals(expected, actual);
        assertEtapaFluxoExecucaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtapaFluxoExecucaoAllUpdatablePropertiesEquals(EtapaFluxoExecucao expected, EtapaFluxoExecucao actual) {
        assertEtapaFluxoExecucaoUpdatableFieldsEquals(expected, actual);
        assertEtapaFluxoExecucaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtapaFluxoExecucaoAutoGeneratedPropertiesEquals(EtapaFluxoExecucao expected, EtapaFluxoExecucao actual) {
        assertThat(expected)
            .as("Verify EtapaFluxoExecucao auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtapaFluxoExecucaoUpdatableFieldsEquals(EtapaFluxoExecucao expected, EtapaFluxoExecucao actual) {
        assertThat(expected)
            .as("Verify EtapaFluxoExecucao relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getFeito()).as("check feito").isEqualTo(actual.getFeito()))
            .satisfies(e -> assertThat(e.getOrdem()).as("check ordem").isEqualTo(actual.getOrdem()))
            .satisfies(e -> assertThat(e.getAgendada()).as("check agendada").isEqualTo(actual.getAgendada()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEtapaFluxoExecucaoUpdatableRelationshipsEquals(EtapaFluxoExecucao expected, EtapaFluxoExecucao actual) {
        assertThat(expected)
            .as("Verify EtapaFluxoExecucao relationships")
            .satisfies(e -> assertThat(e.getOrdemServico()).as("check ordemServico").isEqualTo(actual.getOrdemServico()));
    }
}
