package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnexoServicoContabilEmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoServicoContabilEmpresaAllPropertiesEquals(
        AnexoServicoContabilEmpresa expected,
        AnexoServicoContabilEmpresa actual
    ) {
        assertAnexoServicoContabilEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertAnexoServicoContabilEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoServicoContabilEmpresaAllUpdatablePropertiesEquals(
        AnexoServicoContabilEmpresa expected,
        AnexoServicoContabilEmpresa actual
    ) {
        assertAnexoServicoContabilEmpresaUpdatableFieldsEquals(expected, actual);
        assertAnexoServicoContabilEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoServicoContabilEmpresaAutoGeneratedPropertiesEquals(
        AnexoServicoContabilEmpresa expected,
        AnexoServicoContabilEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify AnexoServicoContabilEmpresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoServicoContabilEmpresaUpdatableFieldsEquals(
        AnexoServicoContabilEmpresa expected,
        AnexoServicoContabilEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify AnexoServicoContabilEmpresa relevant properties")
            .satisfies(e -> assertThat(e.getLink()).as("check link").isEqualTo(actual.getLink()))
            .satisfies(e -> assertThat(e.getDataHoraUpload()).as("check dataHoraUpload").isEqualTo(actual.getDataHoraUpload()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnexoServicoContabilEmpresaUpdatableRelationshipsEquals(
        AnexoServicoContabilEmpresa expected,
        AnexoServicoContabilEmpresa actual
    ) {
        assertThat(expected)
            .as("Verify AnexoServicoContabilEmpresa relationships")
            .satisfies(e -> assertThat(e.getAnexoRequerido()).as("check anexoRequerido").isEqualTo(actual.getAnexoRequerido()))
            .satisfies(
                e ->
                    assertThat(e.getServicoContabilAssinaturaEmpresa())
                        .as("check servicoContabilAssinaturaEmpresa")
                        .isEqualTo(actual.getServicoContabilAssinaturaEmpresa())
            );
    }
}
