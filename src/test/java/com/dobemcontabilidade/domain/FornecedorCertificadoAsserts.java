package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FornecedorCertificadoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFornecedorCertificadoAllPropertiesEquals(FornecedorCertificado expected, FornecedorCertificado actual) {
        assertFornecedorCertificadoAutoGeneratedPropertiesEquals(expected, actual);
        assertFornecedorCertificadoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFornecedorCertificadoAllUpdatablePropertiesEquals(
        FornecedorCertificado expected,
        FornecedorCertificado actual
    ) {
        assertFornecedorCertificadoUpdatableFieldsEquals(expected, actual);
        assertFornecedorCertificadoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFornecedorCertificadoAutoGeneratedPropertiesEquals(
        FornecedorCertificado expected,
        FornecedorCertificado actual
    ) {
        assertThat(expected)
            .as("Verify FornecedorCertificado auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFornecedorCertificadoUpdatableFieldsEquals(FornecedorCertificado expected, FornecedorCertificado actual) {
        assertThat(expected)
            .as("Verify FornecedorCertificado relevant properties")
            .satisfies(e -> assertThat(e.getRazaoSocial()).as("check razaoSocial").isEqualTo(actual.getRazaoSocial()))
            .satisfies(e -> assertThat(e.getSigla()).as("check sigla").isEqualTo(actual.getSigla()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFornecedorCertificadoUpdatableRelationshipsEquals(
        FornecedorCertificado expected,
        FornecedorCertificado actual
    ) {}
}
