package com.dobemcontabilidade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ImpostoParceladoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoParceladoAllPropertiesEquals(ImpostoParcelado expected, ImpostoParcelado actual) {
        assertImpostoParceladoAutoGeneratedPropertiesEquals(expected, actual);
        assertImpostoParceladoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoParceladoAllUpdatablePropertiesEquals(ImpostoParcelado expected, ImpostoParcelado actual) {
        assertImpostoParceladoUpdatableFieldsEquals(expected, actual);
        assertImpostoParceladoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoParceladoAutoGeneratedPropertiesEquals(ImpostoParcelado expected, ImpostoParcelado actual) {
        assertThat(expected)
            .as("Verify ImpostoParcelado auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoParceladoUpdatableFieldsEquals(ImpostoParcelado expected, ImpostoParcelado actual) {
        assertThat(expected)
            .as("Verify ImpostoParcelado relevant properties")
            .satisfies(e -> assertThat(e.getDiasAtraso()).as("check diasAtraso").isEqualTo(actual.getDiasAtraso()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImpostoParceladoUpdatableRelationshipsEquals(ImpostoParcelado expected, ImpostoParcelado actual) {
        assertThat(expected)
            .as("Verify ImpostoParcelado relationships")
            .satisfies(
                e -> assertThat(e.getParcelamentoImposto()).as("check parcelamentoImposto").isEqualTo(actual.getParcelamentoImposto())
            )
            .satisfies(
                e -> assertThat(e.getImpostoAPagarEmpresa()).as("check impostoAPagarEmpresa").isEqualTo(actual.getImpostoAPagarEmpresa())
            );
    }
}
